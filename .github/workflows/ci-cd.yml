# GitHub Actions Pipeline para HealthTrack
name: HealthTrack CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout c贸digo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Para SonarQube
    
    - name: Setup JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Ejecutar pruebas unitarias
      run: mvn clean test -Dtest=**/*UnitTest
    
    - name: Ejecutar pruebas de integraci贸n
      run: mvn test -Dtest=**/*IntegrationTest
    
    - name: Generar reporte de cobertura
      run: mvn jacoco:report
    
    - name: SonarQube Scan
      run: |
        mvn sonar:sonar \
          -Dsonar.projectKey=healthtrack \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.qualitygate.wait=true
    
    - name: Publicar resultados de pruebas
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: JUnit Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: target/site/jacoco/jacoco.xml
        fail_ci_if_error: true

  performance-test:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout c贸digo
      uses: actions/checkout@v3
    
    - name: Setup JMeter
      run: |
        wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.5.tgz
        tar -xzf apache-jmeter-5.5.tgz
        sudo mv apache-jmeter-5.5 /opt/jmeter
        sudo ln -s /opt/jmeter/bin/jmeter /usr/local/bin/jmeter
    
    - name: Ejecutar pruebas de rendimiento
      run: |
        mkdir -p results
        jmeter -n -t tests/performance/peso-update-load-test.jmx \
               -l results/performance-results.jtl \
               -e -o results/performance-report
    
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-reports
        path: results/

  deploy:
    runs-on: ubuntu-latest
    needs: [test, performance-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Deploy to staging
      run: echo "Desplegando a staging..."
    
    - name: Smoke tests
      run: echo "Ejecutando smoke tests..."
    
    - name: Deploy to production
      if: success()
      run: echo "Desplegando a producci贸n..."
